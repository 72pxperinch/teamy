{"ast":null,"code":"import Axios from\"axios\";import{USER_LIST_REQUEST,USER_LIST_SUCCESS,USER_LIST_FAIL,USER_CREATE_REQUEST,USER_CREATE_SUCCESS,USER_CREATE_FAIL,USER_UPDATE_REQUEST,USER_UPDATE_SUCCESS,USER_UPDATE_FAIL,USER_DELETE_REQUEST,USER_DELETE_SUCCESS,USER_DELETE_FAIL}from\"./userConstants\";const BASE_URL=\"http://localhost:5500/api/users\";const listUsers=function(){let pageNumber=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;let searchQuery=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';let filterGender=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'';let filterDomain=arguments.length>4&&arguments[4]!==undefined?arguments[4]:'';let filterAvailability=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;return async(dispatch,getState)=>{console.log(\"List User\");try{dispatch({type:USER_LIST_REQUEST});if(filterAvailability===\"\"){filterAvailability=null;}let url=\"\".concat(BASE_URL,\"?page=\").concat(pageNumber,\"&limit=\").concat(limit,\"&name=\").concat(searchQuery,\"&gender=\").concat(filterGender,\"&domain=\").concat(filterDomain);if(filterAvailability!==null){url+=\"&availability=\".concat(filterAvailability);}const{data}=await Axios.get(url);dispatch({type:USER_LIST_SUCCESS,payload:data});}catch(error){dispatch({type:USER_LIST_FAIL,payload:error.message});}};};const createUser=_ref=>{let{first_name,last_name,email,gender,avatar,domain,available}=_ref;return async(dispatch,getState)=>{console.log(\"Create User\");dispatch({type:USER_CREATE_REQUEST,payload:{first_name,last_name,email,gender,avatar,domain,available}});try{const{data}=await Axios.post(BASE_URL,{first_name,last_name,email,gender,avatar,domain,available});dispatch({type:USER_CREATE_SUCCESS,payload:data});}catch(error){dispatch({type:USER_CREATE_FAIL,payload:error.message});}};};const updateUser=_ref2=>{let{userId,first_name,last_name,email,gender,avatar,domain,available}=_ref2;return async(dispatch,getState)=>{console.log(\"Update User\");dispatch({type:USER_UPDATE_REQUEST,payload:{userId,first_name,last_name,email,gender,avatar,domain,available}});try{const{data}=await Axios.put(\"\".concat(BASE_URL,\"/\").concat(userId),{first_name,last_name,email,gender,avatar,domain,available});dispatch({type:USER_UPDATE_SUCCESS,payload:data});}catch(error){dispatch({type:USER_UPDATE_FAIL,payload:error.message});}};};const deleteUser=userId=>async(dispatch,getState)=>{console.log(\"Delete User\");try{dispatch({type:USER_DELETE_REQUEST});await Axios.delete(\"\".concat(BASE_URL,\"/\").concat(userId));dispatch({type:USER_DELETE_SUCCESS});}catch(error){dispatch({type:USER_DELETE_FAIL,payload:error.message});}};export{createUser,deleteUser,updateUser,listUsers};","map":{"version":3,"names":["Axios","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_CREATE_REQUEST","USER_CREATE_SUCCESS","USER_CREATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","BASE_URL","listUsers","pageNumber","arguments","length","undefined","limit","searchQuery","filterGender","filterDomain","filterAvailability","dispatch","getState","console","log","type","url","concat","data","get","payload","error","message","createUser","_ref","first_name","last_name","email","gender","avatar","domain","available","post","updateUser","_ref2","userId","put","deleteUser","delete"],"sources":["/Users/hafidhfarhans/Desktop/teamy/teamy/src/userActions.js"],"sourcesContent":["import Axios from \"axios\";\nimport {\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_CREATE_REQUEST,\n  USER_CREATE_SUCCESS,\n  USER_CREATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL\n} from \"./userConstants\";\n\nconst BASE_URL = \"http://localhost:5500/api/users\";\n\nconst listUsers = (\n  pageNumber = 1,\n  limit = 20,\n  searchQuery = '',\n  filterGender = '',\n  filterDomain = '',\n  filterAvailability = null\n) => async (dispatch, getState) => {\n  console.log(\"List User\");\n  try {\n    dispatch({ type: USER_LIST_REQUEST });\n\n    if (filterAvailability === \"\") {\n      filterAvailability = null\n    }\n    let url = `${BASE_URL}?page=${pageNumber}&limit=${limit}&name=${searchQuery}&gender=${filterGender}&domain=${filterDomain}`;\n\n    if (filterAvailability !== null) {\n      url += `&availability=${filterAvailability}`;\n    }\n\n    const { data } = await Axios.get(url);\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: USER_LIST_FAIL, payload: error.message });\n  }\n};\n\nconst createUser = ({ first_name, last_name, email, gender, avatar, domain, available }) => async (dispatch, getState) => {\n  console.log(\"Create User\");\n  dispatch({ type: USER_CREATE_REQUEST, payload: { first_name, last_name, email, gender, avatar, domain, available } });\n  try {\n    const { data } = await Axios.post(BASE_URL, {\n      first_name,\n      last_name,\n      email,\n      gender,\n      avatar,\n      domain,\n      available\n    });\n    dispatch({ type: USER_CREATE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: USER_CREATE_FAIL, payload: error.message });\n  }\n};\n\nconst updateUser = ({ userId, first_name, last_name, email, gender, avatar, domain, available }) => async (dispatch, getState) => {\n  console.log(\"Update User\");\n  dispatch({ type: USER_UPDATE_REQUEST, payload: { userId, first_name, last_name, email, gender, avatar, domain, available } });\n  try {\n    const { data } = await Axios.put(`${BASE_URL}/${userId}`, {\n      first_name,\n      last_name,\n      email,\n      gender,\n      avatar,\n      domain,\n      available\n    });\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: USER_UPDATE_FAIL, payload: error.message });\n  }\n};\n\nconst deleteUser = (userId) => async (dispatch, getState) => {\n\n  console.log(\"Delete User\");\n  try {\n    dispatch({ type: USER_DELETE_REQUEST });\n    await Axios.delete(`${BASE_URL}/${userId}`);\n    dispatch({ type: USER_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({ type: USER_DELETE_FAIL, payload: error.message });\n  }\n};\n\nexport { createUser, deleteUser, updateUser, listUsers };\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OACEC,iBAAiB,CACjBC,iBAAiB,CACjBC,cAAc,CACdC,mBAAmB,CACnBC,mBAAmB,CACnBC,gBAAgB,CAChBC,mBAAmB,CACnBC,mBAAmB,CACnBC,gBAAgB,CAChBC,mBAAmB,CACnBC,mBAAmB,CACnBC,gBAAgB,KACX,iBAAiB,CAExB,KAAM,CAAAC,QAAQ,CAAG,iCAAiC,CAElD,KAAM,CAAAC,SAAS,CAAG,QAAAA,CAAA,KAChB,CAAAC,UAAU,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IACd,CAAAG,KAAK,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IACV,CAAAI,WAAW,CAAAJ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAChB,CAAAK,YAAY,CAAAL,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IACjB,CAAAM,YAAY,CAAAN,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IACjB,CAAAO,kBAAkB,CAAAP,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,OACtB,OAAOQ,QAAQ,CAAEC,QAAQ,GAAK,CACjCC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CACxB,GAAI,CACFH,QAAQ,CAAC,CAAEI,IAAI,CAAE3B,iBAAkB,CAAC,CAAC,CAErC,GAAIsB,kBAAkB,GAAK,EAAE,CAAE,CAC7BA,kBAAkB,CAAG,IAAI,CAC3B,CACA,GAAI,CAAAM,GAAG,IAAAC,MAAA,CAAMjB,QAAQ,WAAAiB,MAAA,CAASf,UAAU,YAAAe,MAAA,CAAUX,KAAK,WAAAW,MAAA,CAASV,WAAW,aAAAU,MAAA,CAAWT,YAAY,aAAAS,MAAA,CAAWR,YAAY,CAAE,CAE3H,GAAIC,kBAAkB,GAAK,IAAI,CAAE,CAC/BM,GAAG,mBAAAC,MAAA,CAAqBP,kBAAkB,CAAE,CAC9C,CAEA,KAAM,CAAEQ,IAAK,CAAC,CAAG,KAAM,CAAA/B,KAAK,CAACgC,GAAG,CAACH,GAAG,CAAC,CACrCL,QAAQ,CAAC,CAAEI,IAAI,CAAE1B,iBAAiB,CAAE+B,OAAO,CAAEF,IAAK,CAAC,CAAC,CACtD,CAAE,MAAOG,KAAK,CAAE,CACdV,QAAQ,CAAC,CAAEI,IAAI,CAAEzB,cAAc,CAAE8B,OAAO,CAAEC,KAAK,CAACC,OAAQ,CAAC,CAAC,CAC5D,CACF,CAAC,GAED,KAAM,CAAAC,UAAU,CAAGC,IAAA,MAAC,CAAEC,UAAU,CAAEC,SAAS,CAAEC,KAAK,CAAEC,MAAM,CAAEC,MAAM,CAAEC,MAAM,CAAEC,SAAU,CAAC,CAAAP,IAAA,OAAK,OAAOb,QAAQ,CAAEC,QAAQ,GAAK,CACxHC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1BH,QAAQ,CAAC,CAAEI,IAAI,CAAExB,mBAAmB,CAAE6B,OAAO,CAAE,CAAEK,UAAU,CAAEC,SAAS,CAAEC,KAAK,CAAEC,MAAM,CAAEC,MAAM,CAAEC,MAAM,CAAEC,SAAU,CAAE,CAAC,CAAC,CACrH,GAAI,CACF,KAAM,CAAEb,IAAK,CAAC,CAAG,KAAM,CAAA/B,KAAK,CAAC6C,IAAI,CAAChC,QAAQ,CAAE,CAC1CyB,UAAU,CACVC,SAAS,CACTC,KAAK,CACLC,MAAM,CACNC,MAAM,CACNC,MAAM,CACNC,SACF,CAAC,CAAC,CACFpB,QAAQ,CAAC,CAAEI,IAAI,CAAEvB,mBAAmB,CAAE4B,OAAO,CAAEF,IAAK,CAAC,CAAC,CACxD,CAAE,MAAOG,KAAK,CAAE,CACdV,QAAQ,CAAC,CAAEI,IAAI,CAAEtB,gBAAgB,CAAE2B,OAAO,CAAEC,KAAK,CAACC,OAAQ,CAAC,CAAC,CAC9D,CACF,CAAC,GAED,KAAM,CAAAW,UAAU,CAAGC,KAAA,MAAC,CAAEC,MAAM,CAAEV,UAAU,CAAEC,SAAS,CAAEC,KAAK,CAAEC,MAAM,CAAEC,MAAM,CAAEC,MAAM,CAAEC,SAAU,CAAC,CAAAG,KAAA,OAAK,OAAOvB,QAAQ,CAAEC,QAAQ,GAAK,CAChIC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1BH,QAAQ,CAAC,CAAEI,IAAI,CAAErB,mBAAmB,CAAE0B,OAAO,CAAE,CAAEe,MAAM,CAAEV,UAAU,CAAEC,SAAS,CAAEC,KAAK,CAAEC,MAAM,CAAEC,MAAM,CAAEC,MAAM,CAAEC,SAAU,CAAE,CAAC,CAAC,CAC7H,GAAI,CACF,KAAM,CAAEb,IAAK,CAAC,CAAG,KAAM,CAAA/B,KAAK,CAACiD,GAAG,IAAAnB,MAAA,CAAIjB,QAAQ,MAAAiB,MAAA,CAAIkB,MAAM,EAAI,CACxDV,UAAU,CACVC,SAAS,CACTC,KAAK,CACLC,MAAM,CACNC,MAAM,CACNC,MAAM,CACNC,SACF,CAAC,CAAC,CACFpB,QAAQ,CAAC,CAAEI,IAAI,CAAEpB,mBAAmB,CAAEyB,OAAO,CAAEF,IAAK,CAAC,CAAC,CACxD,CAAE,MAAOG,KAAK,CAAE,CACdV,QAAQ,CAAC,CAAEI,IAAI,CAAEnB,gBAAgB,CAAEwB,OAAO,CAAEC,KAAK,CAACC,OAAQ,CAAC,CAAC,CAC9D,CACF,CAAC,GAED,KAAM,CAAAe,UAAU,CAAIF,MAAM,EAAK,MAAOxB,QAAQ,CAAEC,QAAQ,GAAK,CAE3DC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1B,GAAI,CACFH,QAAQ,CAAC,CAAEI,IAAI,CAAElB,mBAAoB,CAAC,CAAC,CACvC,KAAM,CAAAV,KAAK,CAACmD,MAAM,IAAArB,MAAA,CAAIjB,QAAQ,MAAAiB,MAAA,CAAIkB,MAAM,CAAE,CAAC,CAC3CxB,QAAQ,CAAC,CAAEI,IAAI,CAAEjB,mBAAoB,CAAC,CAAC,CACzC,CAAE,MAAOuB,KAAK,CAAE,CACdV,QAAQ,CAAC,CAAEI,IAAI,CAAEhB,gBAAgB,CAAEqB,OAAO,CAAEC,KAAK,CAACC,OAAQ,CAAC,CAAC,CAC9D,CACF,CAAC,CAED,OAASC,UAAU,CAAEc,UAAU,CAAEJ,UAAU,CAAEhC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}